// Generated by CoffeeScript 1.8.0
(function() {
  var nextUnusedLetter;

  nextUnusedLetter = function(object) {
    var candidate, index, letters, suffix;
    letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    index = 0;
    suffix = 0;
    candidate = function() {
      return "" + letters[index] + (suffix > 0 ? suffix : '');
    };
    while (candidate() in object) {
      index++;
      if (index === letters.length) {
        index = 0;
        suffix++;
      }
    }
    return candidate();
  };

  APISandbox.addClass('Word', 'A string of characters', function(x) {
    return typeof x === 'string' && /^[a-zA-Z]*$/.test(x);
  });

  APISandbox.addConstructor('Add a word', function(word, environment) {
    var key;
    key = nextUnusedLetter(environment);
    environment[key] = word;
    return "Let " + key + " stand for the word \"" + word + ".\"";
  }, {
    name: 'the word to add',
    description: 'the word to add (e.g., "red" or "hamster")',
    type: 'string',
    defaultValue: 'example',
    validator: function(string) {
      if (string.length === 0) {
        return {
          valid: false,
          message: 'Words must have at least 1 letter.'
        };
      } else if (/^[a-zA-Z]+$/.test(string)) {
        return {
          valid: true
        };
      } else {
        return {
          valid: false,
          message: 'Only the letters a-z are allowed.'
        };
      }
    }
  });

  APISandbox.addMethod('Word', 'reverse it', function(name, environment) {
    var i, reverse, string;
    string = environment[name];
    reverse = ((function() {
      var _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = string.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        _results.push(string[string.length - 1 - i]);
      }
      return _results;
    })()).join('');
    environment[name] = reverse;
    return "Reversing " + name + " gives " + reverse + ".  Thus " + name + " now stands for " + reverse + ".";
  });

  APISandbox.addMethod('Word', 'sort its letters into alphabetical order', function(name, environment) {
    var array, i, string;
    string = environment[name];
    array = (function() {
      var _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = string.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        _results.push(string[i]);
      }
      return _results;
    })();
    array.sort();
    environment[name] = array.join('');
    return "Sorting the letters of " + name + " into alphabetical order gives " + environment[name] + ".  Thus " + name + " now stands for " + environment[name] + ".";
  });

  APISandbox.addMethod('Word', 'look it up on Wikipedia', function(name, environment) {
    return "Click <a target='_blank' href='http://en.wikipedia.org/wiki/" + environment[name] + "' >here</a> to look up " + environment[name] + " on Wikipedia.";
  });

  APISandbox.addClass('Number', 'A string of digits', function(x) {
    var _ref;
    return ((_ref = typeof x) === 'string' || _ref === 'number') && /^[0-9]+$/.test(x);
  });

  APISandbox.addConstructor('Add a number', function(number, environment) {
    var key;
    key = nextUnusedLetter(environment);
    environment[key] = parseInt(number);
    return "Let " + key + " stand for the number " + number + ".";
  }, {
    name: 'the number to add',
    description: 'the number to add (e.g., 0 or 43782)',
    type: 'integer',
    min: 0,
    defaultValue: 1
  });

  APISandbox.addMethod('Number', 'compute its square', function(name, environment) {
    return "Squaring " + name + " gives " + (environment[name] * environment[name]) + ". (But " + name + " still continues to mean " + environment[name] + ".)";
  });

  APISandbox.setup(document.getElementById('main-div'));

  ($('#title-div')).append(APISandbox.permalinkElement());

  ($('#title-div')).append(' &mdash; ');

  ($('#title-div')).append(APISandbox.clearElement());

}).call(this);

//# sourceMappingURL=demo1-solo.js.map
